[{"/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/reportWebVitals.ts":"1","/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/App.tsx":"2","/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/index.tsx":"3","/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/component/Slider/Slider.tsx":"4","/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/component/Card/Card.tsx":"5"},{"size":425,"mtime":1611931224346,"results":"6","hashOfConfig":"7"},{"size":1033,"mtime":1612175612314,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1611931224345,"results":"9","hashOfConfig":"7"},{"size":3300,"mtime":1612137805636,"results":"10","hashOfConfig":"7"},{"size":1239,"mtime":1612175250922,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qtni2f",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/reportWebVitals.ts",[],[],"/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/App.tsx",[],"/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/index.tsx",[],"/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/component/Slider/Slider.tsx",["24"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Card } from '../Card/Card';\nimport './Slider.scss';\n\ninterface SliderProps {\n  item: SectionType;\n  width: number;\n}\n\ninterface SectionType {\n  title: string;\n  restaurants: RestaurantType[];\n}\n\nexport interface RestaurantType {\n  blurhash: string;\n  launch_date: string;\n  location: number[];\n  name: string;\n  online: boolean;\n  popularity: number;\n}\n\nconst getArrayToIndex = (array: RestaurantType[], index: number) => {\n  let arrayFinal = [] as RestaurantType[];\n\n  const prevItem = index - 1 < 0 ? array.length - 1 : index - 1;\n  const firstItem = index;\n  const secondItem = index + 1 > array.length - 1 ? 0 : index + 1;\n  const thirdItem = secondItem + 1 > array.length - 1 ? 0 : secondItem + 1;\n  const nextItem = thirdItem + 1 > array.length - 1 ? 0 : thirdItem + 1;\n\n  arrayFinal = [\n    array[prevItem],\n    array[firstItem],\n    array[secondItem],\n    array[thirdItem],\n    array[nextItem],\n  ];\n  return arrayFinal;\n};\n\nexport const Slider: React.FC<SliderProps> = ({ item, width }) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState({\n    activeIndex: 0,\n    translate: 0,\n    transition: 0,\n    cardarray: getArrayToIndex(item.restaurants, 0),\n  });\n\n  const NextSlide = () => {\n    const nextIndex =\n      state.activeIndex + 1 > item.restaurants.length - 1\n        ? 0\n        : state.activeIndex + 1;\n    setState({\n      activeIndex: nextIndex,\n      translate: -(width + 20),\n      transition: 0.25,\n      cardarray: state.cardarray,\n    });\n  };\n\n  const PrevSlide = () => {\n    const prevIndex =\n      state.activeIndex - 1 < 0\n        ? item.restaurants.length - 1\n        : state.activeIndex - 1;\n    setState({\n      activeIndex: prevIndex,\n      translate: width + 20,\n      transition: 0.25,\n      cardarray: state.cardarray,\n    });\n  };\n\n  useEffect(() => {\n    const changeArray = () => {\n      setState({\n        activeIndex: state.activeIndex,\n        translate: 0,\n        transition: 0,\n        cardarray: getArrayToIndex(item.restaurants, state.activeIndex),\n      });\n    };\n\n    window.addEventListener('transitionend', changeArray);\n    return () => {\n      window.removeEventListener('transitionend', changeArray);\n    };\n  }, [state.activeIndex]);\n\n  return (\n    <>\n      <div className=\"header-container\">\n        <h2 className=\"header-container__title\">\n          {item.title} {` (${item.restaurants.length})`}\n        </h2>\n        <div className=\"header-container__button\">\n          <button className=\"button left\" onClick={PrevSlide}>\n            {'<'}\n          </button>\n          <button className=\"button right\" onClick={NextSlide}>\n            {'>'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"carousel\">\n        <div\n          className=\"slider\"\n          style={{\n            transform: `translate(${state.translate - (width + 20)}px)`,\n            transition:\n              state.transition === 0 ? 'none' : `all ${state.transition}s`,\n          }}\n        >\n          {state.cardarray.map((restaurant, index) => (\n            <div className=\"slider__card-item\" key={index}>\n              <Card width={width} restaurant={restaurant} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/apple/Desktop/Code/React/wolt/summer2021-internship/summer2021-wolt/src/component/Card/Card.tsx",[],{"ruleId":"25","severity":1,"message":"26","line":44,"column":9,"nodeType":"27","messageId":"28","endLine":44,"endColumn":12},"@typescript-eslint/no-unused-vars","'ref' is assigned a value but never used.","Identifier","unusedVar"]